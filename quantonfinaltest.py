# -*- coding: utf-8 -*-
"""Quantonfinaltest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1F500ZvSOH2Jm6lDgkt-L2WCzNF2RHnNQ

MARKET MAKING STRATEGY

Here we will try to use the Bid ask and try make profit on 3bps margins. Also, we will hedge the position incase our loss amount greater than 5000 USD

Installing pandas package for using pandas dataframe
"""

import pandas as pd

"""Importing CSV data file of BTCUSDTC 01-03-2022"""

data1=pd.read_csv('/content/BTCUSDT2022-03-01.csv', names= ['tradeid', 'price', 'qty',' qoute', 'time', 'isbuyermaker', 'isBestMatch'])

"""Importing CSV data file of BTCUSDTC 02-03-2022"""

data2=pd.read_csv('/content/BTCUSDT-trades-2022-03-02.csv', names= ['tradeid', 'price', 'qty',' qoute', 'time', 'isbuyermaker', 'isBestMatch'])

"""Importing CSV data file of BTCUSDTC 03-03-2022"""

data3=pd.read_csv('/content/BTCUSDT-trades-2022-03-03.csv', names= ['tradeid', 'price', 'qty',' qoute', 'time', 'isbuyermaker', 'isBestMatch'])

data5=pd.concat([data1, data2, data3],ignore_index=True)

data5.head(5)

"""Converting the time column to datetime"""

data5['time'] = pd.to_datetime(data5['time'], unit='ms')

"""Assigning data frame data 1, data 2, date 3 of dates March 1,2022, March 2, 2022, and of March 3,2022"""

df=data3    #when processing March 3 data
#df=data2   #when processing March 2 data
#df=data1   #when processing March 1 data
#df=data5   #when processing all three days together

pos=0         #Assigning position value
num=0         
percentchange=[]

for i in df.index:    
  close=df["price"][i]

  if(pos==0):         #To start on the buy side
    bp=close
    pos=1
    z=1.0003*bp
  
  elif(pos==1 and close>=z):  #To end on the sell side
    pos=0
    sp=close
    pc=(sp/bp-1)*100
    percentchange.append(pc)

  elif(pos==1 and (bp-close)>=5000):    # Getting a hedge position when the price drops 5000$ 
    pos=2
    sp2=2*close
    sp3=close
    z2=1.0003*sp3
    pc=(sp3/bp-1)*100
    percentchange.append(pc)

  elif(pos==2 and close>=z2):            # Getting a close on the above hedge position
    pos=0
    bp=close
    pc=(sp3/bp-1)*100
    percentchange.append(pc)
    
  elif(pos==2 and (sp3-close)>=5000):   # Hedging the hedge position above
    pos=3
    bp=close
    z3=1.0003*bp
    pc=(sp3/bp-1)*100
    percentchange.append(pc)
  elif(pos==3 and close>=z3):         # Closing all the position to end the trade
    pos=0
    sp=close
    pc=(sp/bp-1)*100
    percentchange.append(pc)

  if(num==df["price"].count()-1 and pos==1):    #Ending the trade before the last trade of the dataframe
    pos=0
    sp=close
    pc=(sp/bp-1)*100
    percentchange.append(pc)
  num+=1

gains=0
ng=0
losses=0
nl=0
totalR=1

for i in percentchange:  # Calculatin gains, no of gains, losses and no of gains
  if(i>0):
    gains+=i
    ng+=1
  else:
    losses+=i
    nl+=1
  totalR=totalR*((i/100)+1)
totalR=round((totalR-1)*100,2)

"""Converting percentchange into DataFrame"""

d=pd.DataFrame(percentchange)

"""Caluculatung sum of percentchange"""

y=d.sum()

"""Calculating the amount of dollars made"""

z=d.sum()*1000

"""Calculating Max Return, Max loss"""

if(ng>0):
	avgGain=gains/ng
	maxR=str(max(percentchange))
else:
	avgGain=0
	maxR="undefined"

if(nl>0):
	avgLoss=losses/nl
	maxL=str(min(percentchange))
	ratio=str(-avgGain/avgLoss)
else:
	avgLoss=0
	maxL="undefined"
	ratio="inf"

"""Printing the values for a quick glance"""

print()
print("Gross PNL in basis points: "+ str(y))
print("Gross PNL in $: "+ str(z))
print("Max Drawdown: "+ maxL)
print("Average Win: "+ str(avgGain))
print("Average Loss: "+ str(avgLoss))
print("Total trades "+str(ng+nl))
print()

"""Assigning the calculated values into a dataframe"""

Results1=pd.DataFrame()
Results1['Gross PNL in basis points']=y
Results1['Gross PNL in $']=z
Results1['Max Drawdown']=maxL
Results1['Average Win']=avgGain
Results1['Average Loss']=avgLoss
Results1['Total trades']=ng+nl

"""Storing the Results into different data frame, as this helps to process each day seperately or part of the day"""

f1=Results1

"""Creating a date column, f1 is for March 1, 2022"""

f1["Date"]='2022-03-01'

f1

f2=Results1

f2

"""Creating a date column, f1 is for March 2, 2022"""

f2["Date"]='2022-03-02'

f3=Results1

"""Creating a date column, f1 is for March 3, 2022"""

f3["Date"]='2022-03-03'

f3

"""Combining the data frames"""

final=pd.concat([f1, f2, f3],ignore_index=True)

"""Setting the date as an index"""

ff=final.set_index('Date')

"""Exporting the dataframe into CSV"""

ff.to_csv('final_r.csv')